"use strict";(self["webpackChunkdev"]=self["webpackChunkdev"]||[]).push([[748],{9110:function(e,n,t){t.r(n),t.d(n,{default:function(){return v}});var i=t(2288),r=t(1784);const s=e=>((0,i.Qi)("data-v-148db431"),e=e(),(0,i.jt)(),e),o={class:"page-view"},c={class:"panel"},d=s((()=>(0,i.Lk)("div",{class:"preview-imgs"},[(0,i.Lk)("div",{class:"mg"},[(0,i.Lk)("img",{src:"https://user-images.githubusercontent.com/2731262/90954882-91865400-e4b3-11ea-8e28-920a165c499a.gif",alt:"@jood/v-bucket sample image 1"})]),(0,i.Lk)("div",{class:"mg"},[(0,i.Lk)("img",{src:"https://user-images.githubusercontent.com/2731262/90954928-e924bf80-e4b3-11ea-9a98-75fe7cd69355.gif",alt:"@jood/v-bucket sample image 2"})])],-1)));function a(e,n,t,s,a,l){const m=(0,i.g2)("demo-panel"),u=(0,i.g2)("demo-panel-devider"),p=(0,i.g2)("demo-preview-code");return(0,i.uX)(),(0,i.CE)("div",o,[(0,i.Lk)("div",c,[(0,i.bF)(m,{class:"panel-imgs",title:"@jood/v-bucket"},{default:(0,i.k6)((()=>[d])),_:1}),(0,i.bF)(u),(0,i.bF)(p,(0,r._B)((0,i.Ng)(e.Codes.install)),null,16),(0,i.bF)(u),(0,i.bF)(p,(0,r._B)((0,i.Ng)(e.Codes.main)),null,16),(0,i.bF)(u),(0,i.bF)(p,(0,r._B)((0,i.Ng)(e.Codes.app)),null,16),(0,i.bF)(u),(0,i.bF)(p,(0,r._B)((0,i.Ng)(e.Codes.someContainer)),null,16)])])}var l={install:{title:"package install",description:"",lang:"bash",code:"$ npm install @jood/v-bucket\n# or $ yarn add @jood/v-bucket"},main:{title:"main.ts",description:"",lang:"typescript",code:"import '@jood/v-bucket/dist/v-bucket.css';"},app:{title:"App.vue",description:"",lang:"html",code:'\n  <template>\n    <div>\n      <jd-bucket-selection-indicate />\n      <some-view testGroupName="A" />\n      <some-view testGroupName="B" />\n    </div>\n  </template>\n  \n  <script lang="ts">\n  import { provideJdBucketRef, JdBucketSelectionIndicate } from \'@jood/v-bucket\';\n  import SomeView from \'./SomeView.vue\';\n  export default {\n    components: {\n      JdBucketSelectionIndicate,\n      SomeView,\n    },\n    setup() {\n      provideJdBucketRef();\n      return {}\n    }\n  }\n  <\/script>\n    '},someContainer:{title:"SomeView.vue",description:"",lang:"html",code:'\n    <template>\n    <div>\n      <h2>group - {{ testGroupName }}</h2>\n      <div class="test-wrap">\n        <div class="test-one">\n          <h3>receiver 1</h3>\n  \n          <jd-bucket-container\n            v-model="receiver1.list"\n            :groupName="testGroupName"\n            :receiver="true"\n            :useGhostBar="true"\n          >\n            <jd-bucket-item\n              v-for="(item, index) in receiver1.list"\n              :key="`${index}_${item.id}`"\n              :model="item"\n              class="test-item"\n              >{{ item }}</jd-bucket-item\n            >\n          </jd-bucket-container>\n        </div>\n        <div class="test-one">\n          <h3>receiver 2</h3>\n          <jd-bucket-container\n            v-model="receiver2.list"\n            :groupName="testGroupName"\n            :receiver="true"\n            :useGhostBar="true"\n          >\n            <jd-bucket-item\n              v-for="(item, index) in receiver2.list"\n              :key="`${index}_${item.id}`"\n              :model="item"\n              class="test-item"\n              >{{ item }}</jd-bucket-item\n            >\n          </jd-bucket-container>\n        </div>\n        <div class="test-one">\n          <h3>sender</h3>\n          <jd-bucket-container v-model="sender1.list" :groupName="testGroupName" :receiver="false">\n            <jd-bucket-item\n              v-for="item in sender1.list"\n              :key="item.id"\n              :model="item"\n              class="test-item"\n              >{{ item }}</jd-bucket-item\n            >\n          </jd-bucket-container>\n        </div>\n      </div>\n    </div>\n  </template>\n  <script lang="ts">\n  import { reactive } from \'vue\';\n  import { JdBucketContainer, JdBucketItem } from \'@jood/v-bucket\';\n  function createTestList(len = 5) {\n    return Array.from(Array(len)).map((item, index) => {\n      return { id: index };\n    });\n  }\n  export default {\n    components: {\n      JdBucketContainer,\n      JdBucketItem,\n    },\n    props: {\n      testGroupName: {\n        type: String,\n        default: \'A\',\n      },\n    },\n    setup() {\n      const receiver1 = reactive({ list: createTestList(Math.floor(Math.random() * 5)) });\n      const receiver2 = reactive({ list: createTestList(Math.floor(Math.random() * 5)) });\n      const sender1 = reactive({ list: createTestList() });\n      return {\n        receiver1,\n        receiver2,\n        sender1,\n      };\n    },\n  };\n  <\/script>\n  <style lang="scss">\n  .test-wrap {\n    display: flex;\n    width: 100%;\n  }\n  .test-one {\n    flex: 1;\n  }\n  .test-item {\n    margin: 2px;\n    padding: 5px;\n    border: 1px solid #cccccc;\n    &.is-selected {\n      border-color: #ff0000;\n    }\n  }\n  </style>\n'}},m=(0,i.pM)({setup(){return{Codes:l}}}),u=t(7433);const p=(0,u.A)(m,[["render",a],["__scopeId","data-v-148db431"]]);var v=p}}]);